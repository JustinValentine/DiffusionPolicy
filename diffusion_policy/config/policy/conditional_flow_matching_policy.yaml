_target_: diffusion_policy.policy.conditional_flow_matching_policy.ConditionalFlowMatchingPolicy
_recursive_: False

defaults:
  - inner_model: ??
  - obs_encoder: ??
  - noise_scheduler: linear_scheduler
  - sigma_distribution@time_distribution: rand_logit_normal
  - sampler: euler
  - _self_


shape_meta: ${shape_meta}
horizon: ${horizon}
n_action_steps: ${eval:'${n_action_steps}+${n_latency_steps}'}
n_obs_steps: ${n_obs_steps}
num_inference_steps: ${num_inference_steps}
target_sigma_min: 0.0
map_from_last_obs: True

noise_scheduler:
  sigma_min: 0
  sigma_max: 1
  append_zero: False

# obs_to_action:
#   _target_: diffusion_policy.dataset.robomimic_replay_dataset.RobomimicObsToAction
#   abs_action: ${task.abs_action}
